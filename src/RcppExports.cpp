// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// plus_number
double plus_number(double number);
RcppExport SEXP _bioinfodb_plus_number(SEXP numberSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type number(numberSEXP);
    rcpp_result_gen = Rcpp::wrap(plus_number(number));
    return rcpp_result_gen;
END_RCPP
}
// readGOFile
Rcpp::DataFrame readGOFile(std::string filename);
RcppExport SEXP _bioinfodb_readGOFile(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(readGOFile(filename));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello
List rcpp_hello();
RcppExport SEXP _bioinfodb_rcpp_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bioinfodb_plus_number", (DL_FUNC) &_bioinfodb_plus_number, 1},
    {"_bioinfodb_readGOFile", (DL_FUNC) &_bioinfodb_readGOFile, 1},
    {"_bioinfodb_rcpp_hello", (DL_FUNC) &_bioinfodb_rcpp_hello, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_bioinfodb(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
